#!/bin/bash
#
#
# tovsolver-gentemplate.sh - Creates the file structure for processing EOS's.
#
# Author: 	Rodrigo Alvares de Souza
#			rsouza01@gmail.com
#
#
# History:
# Version 0.1: 2015/04/28 (rsouza) - Creating the file...
# Version 0.2: 2015/05/11 (rsouza) - New name, stuff related to the new installer...
#
# DO NOT EDIT THIS FILE. 
# MODEL RELATED PARAMETERS SHOULD BE ENTERED VIA COMMAND LINE PARAMETERS.
# IN PRINCIPLE, THESE PARAMETERS DO NOT NEED TO BE CHANGED.

# INFORMS THE SHELL THAT THE SCRIPT MUST EXIT IF SOME COMMAND RETURNS
# SOMETHING OTHER THAN 0
set -e

#FUNCTIONS DEFINITIONS

print2stringslncolor () {
        echo -e "\e[0m$1\e[1;34m$2\e[0m"
}


print2stringslncolorERROR () {
        echo -e "\e[0m$1\e[1;91m$2\e[0m"
}

printlncolor () {
        echo -e "\e[1;34m$1\e[0m"
}

printlncolorERROR () {
        echo -e "\e[1;91m$1\e[0m"
}
#END FUNCTIONS DEFINITIONS

#MAIN PROGRAM

_PROJECT_NAME="nonameproject"
_OUTPUT_DIR="./nonameproject/"

USE_MESSAGE="
Usage: ./$(basename "$0") [OPTIONS]

OPTIONS:
  -p, --project			Sets the project name, '${_PROJECT_NAME}' by default.
  -o, --outputdir		Sets the Output directory, '${_OUTPUT_DIR}' by default.

  -h, --help            Show this help screen and exits
  -V, --version         Show program version and exits
"

_VERSION=$(grep '^# Version ' "$0" | tail -1 | cut -d : -f 1 | tr -d \#)

#Command line arguments
while test -n "$1"
do
        case "$1" in

		-p | --project)
			shift
			_PROJECT_NAME=$1 
			_OUTPUT_DIR="./$1"
                ;;


		-o | --outputdir) 
			shift
			_OUTPUT_DIR=$1 
			;;


		-h | --help)
			echo "$USE_MESSAGE"
			exit 0
		;;

		-V | --version)
			echo -n $(basename "$0")
			echo " ${_VERSION}"
			exit 0
		;;

		*)
			echo Invalid option: $1
			exit 1
		;;
	esac

	shift
done


printlncolor "\n\n__________________________________________________________________________________________________________"
printlncolor "------------------------------  TOV Solver Project Generator ${_VERSION} --------------------------------"
printlncolor "__________________________________________________________________________________________________________\n\n"


print2stringslncolor "Creating directory structure..."

mkdir -p ${_OUTPUT_DIR}/output
mkdir -p ${_OUTPUT_DIR}/scripts
mkdir -p ${_OUTPUT_DIR}/plots

if [ $? -ne 0 ]; then
	print2stringslncolorERROR "Return status: " "[ERROR]"
else
	print2stringslncolor "Return status: " "[OK]"
fi

print2stringslncolor "Creating auxiliary files..."

echo 'The profile files will be generatade in the directory.' > ${_OUTPUT_DIR}/output/README.txt
echo 'The plots will be generatade in the directory.' > ${_OUTPUT_DIR}/plots/README.txt
echo 'Put your configuration and your EOS files in this directory.' > ${_OUTPUT_DIR}/README.txt
touch ${_OUTPUT_DIR}/EOS.csv

if [ $? -ne 0 ]; then
	print2stringslncolorERROR "Return status: " "[ERROR]"
else
	print2stringslncolor "Return status: " "[OK]"
fi

# I ASSUME THIS COMMAND IS BEING EXECUTED IN THE PROJECTS ROOT FOLDER.

print2stringslncolor "Copying customizable files..."

cp tovsolver-chain.sh ${_OUTPUT_DIR}/
cp tovsolver-batch.sh ${_OUTPUT_DIR}/scripts
cp tovsolver-genoutput.sh ${_OUTPUT_DIR}/scripts
cp tovsolver-template.conf ${_OUTPUT_DIR}/tov_solver.conf
cp massaRaio.gnuplot ${_OUTPUT_DIR}/scripts
cp massaRho.gnuplot ${_OUTPUT_DIR}/scripts



if [ $? -ne 0 ]; then
	print2stringslncolorERROR "Return status: " "[ERROR]"
else
	print2stringslncolor "Return status: " "[OK]"
fi


printlncolor "Done."
